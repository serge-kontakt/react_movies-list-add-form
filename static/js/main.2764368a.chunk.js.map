{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","setIsValidImg","setIsValidImdb","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","hasUrlError","pattern","RegExp","source","isValidInput","test","handleChange","newValue","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isValidImg","isValidImdb","handleTextField","setText","cantSubmit","onSubmit","e","preventDefault","countPrev","disabled","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2764368a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  setIsValidImg: (newValue: boolean) => void,\n  setIsValidImdb: (newValue: boolean) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  setIsValidImg,\n  setIsValidImdb,\n\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  let hasUrlError = false;\n\n  const pattern = new RegExp(\n    /^([A-Za-z]{3,9}:(?:\\/\\/)?)/.source\n    + /(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|/.source\n    + /(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+/.source\n    + /(?:\\/[+~%/.\\w-_]*)?\\??/.source\n    + /(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*)?$/.source,\n  );\n\n  let isValidInput = pattern.test(value);\n\n  if (!isValidInput && value && (name === 'imgUrl' || name === 'imdbUrl')) {\n    hasUrlError = true;\n  }\n\n  const handleChange = (newValue: string) => {\n    isValidInput = pattern.test(newValue);\n\n    if (!isValidInput && newValue && name === 'imgUrl') {\n      setIsValidImg(false);\n    }\n\n    if (!isValidInput && newValue && name === 'imdbUrl') {\n      setIsValidImdb(false);\n    }\n\n    if (isValidInput && newValue && name === 'imgUrl') {\n      setIsValidImg(true);\n    }\n\n    if (isValidInput && newValue && name === 'imdbUrl') {\n      setIsValidImdb(true);\n    }\n\n    onChange(newValue);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasUrlError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => handleChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {hasUrlError && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [isValidImg, setIsValidImg] = useState(true);\n  const [isValidImdb, setIsValidImdb] = useState(true);\n\n  function handleTextField(setText: (value: string) => void) {\n    const handleText = (value: string) => {\n      setText(value);\n    };\n\n    return handleText;\n  }\n\n  let cantSubmit = true;\n\n  if (title && imgUrl && imdbUrl && imdbId && isValidImg && isValidImdb) {\n    cantSubmit = false;\n  }\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n    setIsValidImg(true);\n    setIsValidImdb(true);\n    setCount((countPrev) => countPrev + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        setIsValidImg={setIsValidImg}\n        setIsValidImdb={setIsValidImdb}\n        onChange={handleTextField(setTitle)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        setIsValidImg={setIsValidImg}\n        setIsValidImdb={setIsValidImdb}\n        onChange={handleTextField(setDescription)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        setIsValidImg={setIsValidImg}\n        setIsValidImdb={setIsValidImdb}\n        onChange={handleTextField(setImgUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        setIsValidImg={setIsValidImg}\n        setIsValidImdb={setIsValidImdb}\n        onChange={handleTextField(setImdbUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        setIsValidImg={setIsValidImg}\n        setIsValidImdb={setIsValidImdb}\n        onChange={handleTextField(setImdbId)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={cantSubmit}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}